import java.lang.reflect.Field;

class MyClass {
    private String secret = "Initial Value";
}

public class ReflectionExample {
    public static void main(String[] args) throws Exception {
        MyClass obj = new MyClass();
        Field field = MyClass.class.getDeclaredField("secret");
        field.setAccessible(true);
        System.out.println("Original: " + field.get(obj));
        field.set(obj, "New Value");
        System.out.println("Modified: " + field.get(obj));
    }
}


gc
import java.util.ArrayList;
import java.util.List;

public class GarbageCollectorComparison {
    public static void main(String[] args) {
        System.out.println("Starting Garbage Collector Comparison...");
        long startTime = System.currentTimeMillis();

        List<byte[]> memoryConsumers = new ArrayList<>();

        try {
            for (int i = 0; i < 10000; i++) {
                // Allocate 1MB objects to simulate heavy memory usage
                byte[] data = new byte[1024 * 1024];
                memoryConsumers.add(data);

                // Occasionally remove some objects to simulate garbage collection
                if (i % 50 == 0 && !memoryConsumers.isEmpty()) {
                    memoryConsumers.remove(0);
                }

                // Encourage GC to kick in
                if (i % 1000 == 0) {
                    System.gc();
                }
            }
        } catch (OutOfMemoryError e) {
            System.err.println("OutOfMemoryError encountered!");
        }

        long endTime = System.currentTimeMillis();
        System.out.println("Execution Time: " + (endTime - startTime) + " ms");
    }
}

